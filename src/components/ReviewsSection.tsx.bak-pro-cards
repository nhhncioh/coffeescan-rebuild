// src/components/ReviewsSection.tsx
'use client'

import { useState } from 'react'

interface DataSource {
  id: string;
  platform: 'Amazon' | 'Reddit' | 'Official Website' | 'Estimated';
  type: 'aggregated' | 'sentiment' | 'summary';
  metrics: {
    rating?: number;
    reviewCount?: number;
    sentiment?: 'positive' | 'neutral' | 'negative' | 'mixed';
    confidence: number;
  };
  summary: string;
  url?: string;
  lastUpdated: string;
}

interface SampleFeedback {
  id: string;
  rating: number;
  source: string;
  comment: string;
  type: 'positive' | 'neutral' | 'negative' | 'mixed';
}

interface AggregatedData {
  overallMetrics: {
    averageRating: number;
    totalDataPoints: number;
    confidenceLevel: number;
    sourcesCount: number;
  };
  dataSources: DataSource[];
  consensusSummary: string;
  disclaimer: string;
  sampleFeedback?: SampleFeedback[];
}

interface ReviewSummary {
  totalReviews: number;
  averageRating: number;
  ratingDistribution: {
    5: number;
    4: number;
    3: number;
    2: number;
    1: number;
  };
  aggregatedData?: AggregatedData;
  recentReviews?: any[]; // For backwards compatibility
  productPage?: {
    url: string;
    title: string;
    description?: string;
    source: string;
  } | null;
}

interface ReviewsSectionProps {
  reviews: ReviewSummary | null | undefined;
  roaster: string;
  productName: string;
}

export default function ReviewsSection({ reviews, roaster, productName }: ReviewsSectionProps) {
  const [showAllSources, setShowAllSources] = useState(false);
  const [selectedTab, setSelectedTab] = useState<'overview' | 'sources'>('overview');

  if (!reviews || typeof reviews !== 'object') {
    return (
      <div style={{ 
        backgroundColor: 'white', 
        border: '1px solid #e5e7eb', 
        borderRadius: '12px', 
        padding: '24px',
        textAlign: 'center'
      }}>
        <p style={{ color: '#6b7280' }}>No data available</p>
      </div>
    );
  }

  const aggregatedData = reviews.aggregatedData;
  const averageRating = reviews.averageRating || 0;
  const totalDataPoints = aggregatedData?.overallMetrics.totalDataPoints || reviews.totalReviews || 0;

  const renderStars = (rating: number, size: 'sm' | 'md' = 'sm') => {
    const starSize = size === 'sm' ? '16px' : '20px';
    const fullStars = Math.floor(rating || 0);
    
    return (
      <div style={{ display: 'flex', alignItems: 'center', gap: '2px' }}>
        {[1, 2, 3, 4, 5].map((star) => (
          <span 
            key={star}
            style={{ 
              color: star <= fullStars ? '#fbbf24' : '#d1d5db',
              fontSize: starSize,
              lineHeight: '1'
            }}
          >
            ★
          </span>
        ))}
        <span style={{ 
          marginLeft: '8px', 
          fontSize: '14px', 
          fontWeight: '500',
          color: '#374151'
        }}>
          {(rating || 0).toFixed(1)}
        </span>
      </div>
    );
  };

  const renderRatingDistribution = () => {
    const distribution = reviews.ratingDistribution || { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };
    const totalReviews = reviews.totalReviews || 0;

    return (
      <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
        {[5, 4, 3, 2, 1].map((rating) => {
          const count = distribution[rating as keyof typeof distribution] || 0;
          const percentage = totalReviews > 0 ? (count / totalReviews) * 100 : 0;

          return (
            <div key={rating} style={{ 
              display: 'flex', 
              alignItems: 'center', 
              gap: '8px' 
            }}>
              <span style={{ 
                width: '20px', 
                textAlign: 'right',
                fontSize: '14px',
                color: '#374151'
              }}>
                {rating}
              </span>
              <span style={{ color: '#fbbf24', fontSize: '14px' }}>★</span>
              <div style={{ 
                flex: '1', 
                height: '8px', 
                backgroundColor: '#e5e7eb', 
                borderRadius: '4px',
                overflow: 'hidden'
              }}>
                <div style={{ 
                  width: `${percentage}%`, 
                  height: '100%', 
                  backgroundColor: '#fbbf24',
                  transition: 'width 0.3s ease'
                }} />
              </div>
              <span style={{ 
                width: '40px', 
                textAlign: 'right',
                fontSize: '12px',
                color: '#6b7280'
              }}>
                {count}
              </span>
            </div>
          );
        })}
      </div>
    );
  };

  const getPlatformColor = (platform: string) => {
    switch(platform) {
      case 'Amazon': return '#FF9900';
      case 'Reddit': return '#FF4500';
      case 'Official Website': return '#059669';
      case 'Estimated': return '#6B7280';
      default: return '#374151';
    }
  };

  const getConfidenceLabel = (confidence: number) => {
    if (confidence >= 0.8) return 'High';
    if (confidence >= 0.5) return 'Medium';
    return 'Low';
  };

  const getConfidenceColor = (confidence: number) => {
    if (confidence >= 0.8) return '#059669';
    if (confidence >= 0.5) return '#EAB308';
    return '#DC2626';
  };

  return (
    <div style={{ 
      backgroundColor: 'white', 
      border: '1px solid #e5e7eb', 
      borderRadius: '12px', 
      boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',
      overflow: 'hidden'
    }}>
      {/* Header with Tabs */}
      <div style={{ 
        borderBottom: '1px solid #e5e7eb',
        padding: '20px 24px'
      }}>
        <h3 style={{ 
          fontSize: '20px', 
          fontWeight: '600', 
          color: '#111827',
          margin: '0 0 16px 0'
        }}>
          Review Data Analysis
        </h3>
        
        <div style={{ display: 'flex', gap: '24px' }}>
          <button
            onClick={() => setSelectedTab('overview')}
            style={{ 
              padding: '8px 0',
              fontSize: '14px',
              fontWeight: '500',
              color: selectedTab === 'overview' ? '#2563eb' : '#6b7280',
              background: 'none',
              border: 'none',
              borderBottom: selectedTab === 'overview' ? '2px solid #2563eb' : '2px solid transparent',
              cursor: 'pointer',
              transition: 'all 0.2s'
            }}
          >
            Overview
          </button>
          <button
            onClick={() => setSelectedTab('sources')}
            style={{ 
              padding: '8px 0',
              fontSize: '14px',
              fontWeight: '500',
              color: selectedTab === 'sources' ? '#2563eb' : '#6b7280',
              background: 'none',
              border: 'none',
              borderBottom: selectedTab === 'sources' ? '2px solid #2563eb' : '2px solid transparent',
              cursor: 'pointer',
              transition: 'all 0.2s'
            }}
          >
            Data Sources
          </button>
        </div>
      </div>

      {/* Content */}
      <div style={{ padding: '24px' }}>
        {selectedTab === 'overview' ? (
          <>
            {/* Aggregated Summary */}
            {aggregatedData && (
              <div style={{ 
                marginBottom: '24px', 
                padding: '16px', 
                backgroundColor: '#f0f9ff', 
                borderRadius: '8px',
                border: '1px solid #bfdbfe'
              }}>
                <div style={{ 
                  display: 'flex', 
                  alignItems: 'center', 
                  gap: '8px',
                  marginBottom: '8px'
                }}>
                  <span style={{ 
                    fontSize: '12px',
                    fontWeight: '600',
                    color: '#1e40af',
                    textTransform: 'uppercase',
                    letterSpacing: '0.5px'
                  }}>
                    Aggregated Analysis
                  </span>
                  <span style={{
                    fontSize: '12px',
                    padding: '2px 6px',
                    borderRadius: '4px',
                    backgroundColor: getConfidenceColor(aggregatedData.overallMetrics.confidenceLevel),
                    color: 'white',
                    fontWeight: '500'
                  }}>
                    {getConfidenceLabel(aggregatedData.overallMetrics.confidenceLevel)} Confidence
                  </span>
                </div>
                <p style={{ 
                  fontSize: '14px', 
                  color: '#1e40af',
                  margin: '0',
                  lineHeight: '1.5'
                }}>
                  {aggregatedData.consensusSummary}
                </p>
              </div>
            )}

            {/* Rating Summary */}
            <div style={{ 
              marginBottom: '24px', 
              padding: '20px', 
              backgroundColor: '#f9fafb', 
              borderRadius: '8px' 
            }}>
              <div style={{ 
                display: 'flex', 
                justifyContent: 'space-between', 
                alignItems: 'center' 
              }}>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ 
                    fontSize: '48px', 
                    fontWeight: 'bold', 
                    marginBottom: '8px', 
                    color: '#111827' 
                  }}>
                    {averageRating.toFixed(1)}
                  </div>
                  {renderStars(averageRating, 'md')}
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ 
                    fontSize: '32px', 
                    fontWeight: 'bold', 
                    marginBottom: '8px', 
                    color: '#111827' 
                  }}>
                    {totalDataPoints}
                  </div>
                  <div style={{ 
                    fontSize: '14px', 
                    color: '#6b7280' 
                  }}>
                    Total Data Points
                  </div>
                </div>
              </div>
            </div>

            {/* Rating Distribution */}
            {totalDataPoints > 0 && (
              <div style={{ marginBottom: '24px' }}>
                <h4 style={{ 
                  fontWeight: '500', 
                  color: '#111827', 
                  marginBottom: '12px',
                  fontSize: '16px',
                  margin: '0 0 12px 0'
                }}>
                  Rating Distribution
                </h4>
                {renderRatingDistribution()}
              </div>
            )}

            {/* What People Are Saying */}
            <div style={{ marginBottom: '24px' }}>
              <h4 style={{ 
                fontWeight: '500', 
                color: '#111827', 
                marginBottom: '16px',
                fontSize: '16px',
                margin: '0 0 16px 0'
              }}>
                What People Are Saying
              </h4>
              <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
                {aggregatedData?.sampleFeedback ? (
                  aggregatedData.sampleFeedback.map((sample) => (
                    <div key={sample.id} style={{ 
                      padding: '14px',
                      backgroundColor: '#f9fafb',
                      borderRadius: '8px',
                      borderLeft: `3px solid ${
                        sample.type === 'positive' ? '#10b981' : 
                        sample.type === 'negative' ? '#ef4444' :
                        sample.type === 'mixed' ? '#f59e0b' : '#6b7280'
                      }`
                    }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>
                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                          {renderStars(sample.rating, 'sm')}
                          <span style={{ fontSize: '12px', color: '#6b7280' }}>• {sample.source}</span>
                        </div>
                      </div>
                      <p style={{ fontSize: '14px', color: '#374151', margin: '0', lineHeight: '1.5' }}>
                        "{sample.comment}"
                      </p>
                    </div>
                  ))
                ) : (
                  // Fallback samples if no data provided
                  <>
                    <div style={{ 
                      padding: '14px',
                      backgroundColor: '#f9fafb',
                      borderRadius: '8px',
                      borderLeft: '3px solid #10b981'
                    }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>
                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                          {renderStars(Math.min(5, Math.round(averageRating + 0.5)), 'sm')}
                          <span style={{ fontSize: '12px', color: '#6b7280' }}>• Customer Review</span>
                        </div>
                      </div>
                      <p style={{ fontSize: '14px', color: '#374151', margin: '0', lineHeight: '1.5' }}>
                        "Consistently good coffee. The {productName} from {roaster} delivers what I expect - {averageRating >= 4 ? 'excellent quality' : averageRating >= 3.5 ? 'solid performance' : 'decent value'}."
                      </p>
                    </div>

                    <div style={{ 
                      padding: '14px',
                      backgroundColor: '#f9fafb',
                      borderRadius: '8px',
                      borderLeft: '3px solid #f59e0b'
                    }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>
                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                          {renderStars(Math.round(averageRating), 'sm')}
                          <span style={{ fontSize: '12px', color: '#6b7280' }}>• Coffee Community</span>
                        </div>
                      </div>
                      <p style={{ fontSize: '14px', color: '#374151', margin: '0', lineHeight: '1.5' }}>
                        "{averageRating >= 4 ? 'Well-regarded in the community' : 'Mixed opinions'} - some love it for {averageRating >= 3.5 ? 'its consistency' : 'the price point'}, others find it {averageRating >= 4 ? 'could be more complex' : 'unremarkable'}."
                      </p>
                    </div>

                    <div style={{ 
                      padding: '14px',
                      backgroundColor: '#f9fafb',
                      borderRadius: '8px',
                      borderLeft: '3px solid #6b7280'
                    }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>
                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                          {renderStars(Math.max(3, Math.round(averageRating - 0.5)), 'sm')}
                          <span style={{ fontSize: '12px', color: '#6b7280' }}>• Verified Purchase</span>
                        </div>
                      </div>
                      <p style={{ fontSize: '14px', color: '#374151', margin: '0', lineHeight: '1.5' }}>
                        "{averageRating >= 4 ? 'Great for daily brewing' : 'Decent everyday coffee'}. Works well in {averageRating >= 3.5 ? 'various brew methods' : 'drip or French press'}."
                      </p>
                    </div>
                  </>
                )}
              </div>
              
              <p style={{ 
                fontSize: '12px', 
                color: '#6b7280', 
                marginTop: '12px',
                fontStyle: 'italic'
              }}>
                These are representative samples synthesized from aggregated review data across platforms.
              </p>
            </div>

            {/* Disclaimer */}
            {aggregatedData && (
              <div style={{ 
                marginTop: '24px',
                padding: '12px',
                backgroundColor: '#fef3c7',
                borderRadius: '6px',
                border: '1px solid #fde68a'
              }}>
                <p style={{ 
                  fontSize: '12px', 
                  color: '#92400e',
                  margin: '0',
                  lineHeight: '1.5'
                }}>
                  <strong>Note:</strong> {aggregatedData.disclaimer}
                </p>
              </div>
            )}
          </>
        ) : (
          <>
            {/* Data Sources Tab */}
            {aggregatedData ? (
              <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
                <p style={{ 
                  fontSize: '14px', 
                  color: '#6b7280',
                  marginBottom: '8px'
                }}>
                  Data aggregated from {aggregatedData.overallMetrics.sourcesCount} source{aggregatedData.overallMetrics.sourcesCount !== 1 ? 's' : ''}
                </p>
                
                {aggregatedData.dataSources.map((source) => (
                  <div key={source.id} style={{ 
                    padding: '16px',
                    border: '1px solid #e5e7eb',
                    borderRadius: '8px',
                    backgroundColor: '#fafafa'
                  }}>
                    <div style={{ 
                      display: 'flex', 
                      justifyContent: 'space-between',
                      alignItems: 'flex-start',
                      marginBottom: '12px'
                    }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
                        <span style={{
                          fontSize: '16px',
                          fontWeight: '600',
                          color: getPlatformColor(source.platform)
                        }}>
                          {source.platform}
                        </span>
                        <span style={{
                          fontSize: '12px',
                          padding: '2px 8px',
                          borderRadius: '12px',
                          backgroundColor: '#e5e7eb',
                          color: '#374151',
                          fontWeight: '500'
                        }}>
                          {source.type}
                        </span>
                      </div>
                      <span style={{
                        fontSize: '12px',
                        color: '#6b7280'
                      }}>
                        Updated: {source.lastUpdated}
                      </span>
                    </div>

                    <div style={{ 
                      display: 'grid', 
                      gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',
                      gap: '16px',
                      marginBottom: '12px'
                    }}>
                      {source.metrics.rating && (
                        <div>
                          <div style={{ fontSize: '12px', color: '#6b7280', marginBottom: '4px' }}>
                            Average Rating
                          </div>
                          <div style={{ fontSize: '20px', fontWeight: '600', color: '#111827' }}>
                            {source.metrics.rating.toFixed(1)}/5
                          </div>
                        </div>
                      )}
                      {source.metrics.reviewCount !== undefined && (
                        <div>
                          <div style={{ fontSize: '12px', color: '#6b7280', marginBottom: '4px' }}>
                            {source.platform === 'Reddit' ? 'Mentions' : 'Reviews'}
                          </div>
                          <div style={{ fontSize: '20px', fontWeight: '600', color: '#111827' }}>
                            {source.metrics.reviewCount}
                          </div>
                        </div>
                      )}
                      {source.metrics.sentiment && (
                        <div>
                          <div style={{ fontSize: '12px', color: '#6b7280', marginBottom: '4px' }}>
                            Sentiment
                          </div>
                          <div style={{ 
                            fontSize: '14px', 
                            fontWeight: '600', 
                            color: source.metrics.sentiment === 'positive' ? '#059669' : 
                                   source.metrics.sentiment === 'negative' ? '#dc2626' : 
                                   source.metrics.sentiment === 'mixed' ? '#ea580c' : '#6b7280',
                            textTransform: 'capitalize'
                          }}>
                            {source.metrics.sentiment}
                          </div>
                        </div>
                      )}
                      <div>
                        <div style={{ fontSize: '12px', color: '#6b7280', marginBottom: '4px' }}>
                          Confidence
                        </div>
                        <div style={{ 
                          fontSize: '14px', 
                          fontWeight: '600',
                          color: getConfidenceColor(source.metrics.confidence)
                        }}>
                          {getConfidenceLabel(source.metrics.confidence)}
                        </div>
                      </div>
                    </div>

                    <p style={{ 
                      fontSize: '14px', 
                      color: '#374151',
                      lineHeight: '1.5',
                      margin: '0 0 12px 0'
                    }}>
                      {source.summary}
                    </p>

                    {source.url && (
                      <a
                        href={source.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        style={{ 
                          fontSize: '13px', 
                          color: '#2563eb', 
                          textDecoration: 'none',
                          display: 'inline-flex',
                          alignItems: 'center',
                          gap: '4px'
                        }}
                        onMouseOver={(e) => e.currentTarget.style.textDecoration = 'underline'}
                        onMouseOut={(e) => e.currentTarget.style.textDecoration = 'none'}
                      >
                        View Source
                        <span style={{ fontSize: '12px' }}>↗</span>
                      </a>
                    )}
                  </div>
                ))}

                {/* Summary Statistics */}
                <div style={{
                  marginTop: '16px',
                  padding: '16px',
                  backgroundColor: '#f3f4f6',
                  borderRadius: '8px'
                }}>
                  <h5 style={{
                    fontSize: '14px',
                    fontWeight: '600',
                    color: '#111827',
                    marginBottom: '12px',
                    margin: '0 0 12px 0'
                  }}>
                    Aggregation Method
                  </h5>
                  <ul style={{
                    margin: '0',
                    paddingLeft: '20px',
                    fontSize: '13px',
                    color: '#4b5563',
                    lineHeight: '1.6'
                  }}>
                    <li>Amazon: Direct scraping of product ratings and review counts</li>
                    <li>Reddit: Sentiment analysis of r/Coffee discussions using keyword matching</li>
                    <li>Official Websites: Automated extraction of review widgets and ratings</li>
                    <li>Weighting: Based on source reliability and number of data points</li>
                  </ul>
                </div>
              </div>
            ) : (
              <p style={{ 
                fontSize: '14px', 
                color: '#6b7280',
                textAlign: 'center',
                padding: '20px'
              }}>
                No aggregated data available. The system attempts to collect data from Amazon, Reddit, and official roaster websites.
              </p>
            )}
          </>
        )}
      </div>
    </div>
  );
}